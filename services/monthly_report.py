import pandas as pdimport datetimefrom .models import ErrorReturnfrom django.http import JsonResponsefrom django.conf import settingsdef monthly_reporting_chart(request, ):    error = ErrorReturn.objects.all().values()    df = pd.DataFrame.from_records(error)    label = list(set(df['product_id']))    counting = df['product_id'].value_counts()    label = counting.index.tolist()    data_values = counting.values.tolist()    data = {        'labels': label,        'count': data_values,        'cols': len(data_values)    }    return JsonResponse(data)def monthly_report_chart(request, month, option=1):    curr_date = datetime.datetime.now()    if month.month <= curr_date.month:        date = datetime.datetime(month.year, month.month, 1, tzinfo=datetime.timezone.utc)        e_date = datetime.datetime(month.year, month.month + (option - 1), 30, tzinfo=datetime.timezone.utc)        start = datetime.datetime.strptime(date, "%Y-%m-%d")        end = datetime.datetime.strptime(e_date, "%Y-%m-%d")        error = ErrorReturn.objects.filter(received_at__range=(start, end))        recorded = error.values()        df = pd.DataFrame.from_records(recorded)        label = list(set(df['product_id']))        counting = df['product_id'].value_counts()        label = counting.index.tolist()        data_values = counting.values.tolist()        data = {            'labels': label,            'count': data_values,            'cols': len(data_values)        }        return JsonResponse(data)def reject_list_excel(qs):    reject_exchange_list = [    ]    for obj in qs:        obj.purchased_date = obj.purchased_date.astimezone(datetime.timezone.utc)        approvement = obj.servicing.fnl_decision        exchange_new = ['အသစ်အလဲပေးပါသည်', 'အသစ်လဲပေးပါသည်', 'အသစ်လဲပေးသည်', 'အသစ်', 'အသစ်အလဲပေးပါသည်။']        if approvement in exchange_new:            reject_exchange_list.append(                {                    'code': obj.product.code,                    'product': obj.product.name,                    'qty': obj.qty,                    'shop': obj.purchased_shop,                    'customer/SO': obj.customer if obj.customer else f"so-{obj.so_no}",                    'purchased date': "-" if obj.customer.lower() == 'shop item' else datetime.datetime.strftime(obj.purchased_date, "%d/%m/%Y"),                    'error reason': obj.reason,                    'final decision': obj.servicing.fnl_decision,                    'received date': datetime.datetime.strftime(obj.received_at, "%d/%m/%Y"),                    'amount': obj.product.price * obj.qty,                },            )        else:            pass    df = pd.DataFrame(reject_exchange_list)    print("%%%%%%%%%%%%%%%%%%%%%%%%%%%")    print(df)    print("############################")    excel_file_path = settings.BASE_DIR / f"reject_files/error_exchange_{datetime.datetime.now().strftime('%d_%m_%Y__%H_%M')}.xlsx"    df.to_excel(excel_file_path, index=False, )    print(f"Created at {datetime.datetime.now()} and file_path: {excel_file_path} ")